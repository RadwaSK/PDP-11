LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.numeric_std.all;

ENTITY ram IS
	PORT(
		clk : IN std_logic;
		wr  : IN std_logic;
		address : IN  std_logic_vector(11 DOWNTO 0);
		datain  : IN  std_logic_vector(15 DOWNTO 0);
		dataout : OUT std_logic_vector(15 DOWNTO 0));
END ENTITY ram;

ARCHITECTURE syncrama OF ram IS

	TYPE ram_type IS ARRAY(0 TO 4095) OF std_logic_vector(15 DOWNTO 0);
	
	----------T_2----------
	----------T_1----------
	SIGNAL ram : ram_type := (
   
   0     => "0000110111000000",
   1     => "0000000000010011",
   2     => "0111000001000001",
   3     => "0000010111000011",
   4     => "0000000000010100",
   5     => "0000010011110111",
   6     => "0000000000001111",
   7     => "1110001100000000",
   8     => "1000110111001011",
   9     => "0000000000001100",
   10     => "1100100000000010",
   11     => "0000001011110111",
   12     => "0000000000001001",
   13     => "1110001100000000",
   14     => "1100010000000010",
   15     => "1110001000000011",
   16     => "1100001111111001",
   17     => "1111000000000000",
   18     => "0000000000000000",
   19     => "0000000000000111",
   20     => "0000000000000100",
   21     => "0000000000000101",
   22     => "0000000000000011",
   23     => "0000000000000110",
   24     => "0000000000000001",
   25     => "0000000000001000",
   26     => "0000000000000010",
   OTHERS => "0000000000000000"
   );
	BEGIN
		PROCESS(clk) IS
			BEGIN
				IF rising_edge(clk) THEN  
					IF wr = '1' THEN
						ram(to_integer(unsigned(address))) <= datain;
					END IF;
				END IF;
		END PROCESS;
		dataout <= ram(to_integer(unsigned(address)));
END syncrama;

